

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Oct 11 17:07:22 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F1824
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000E                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0095                     	;# 
    61  0096                     	;# 
    62  0097                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009A                     	;# 
    66  009B                     	;# 
    67  009B                     	;# 
    68  009C                     	;# 
    69  009D                     	;# 
    70  009E                     	;# 
    71  010C                     	;# 
    72  010E                     	;# 
    73  0111                     	;# 
    74  0112                     	;# 
    75  0113                     	;# 
    76  0114                     	;# 
    77  0115                     	;# 
    78  0116                     	;# 
    79  0117                     	;# 
    80  0118                     	;# 
    81  0119                     	;# 
    82  011A                     	;# 
    83  011B                     	;# 
    84  011D                     	;# 
    85  011E                     	;# 
    86  018C                     	;# 
    87  018E                     	;# 
    88  0191                     	;# 
    89  0191                     	;# 
    90  0192                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0194                     	;# 
    95  0195                     	;# 
    96  0196                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019C                     	;# 
   102  019D                     	;# 
   103  019E                     	;# 
   104  019F                     	;# 
   105  020C                     	;# 
   106  020E                     	;# 
   107  0211                     	;# 
   108  0211                     	;# 
   109  0212                     	;# 
   110  0212                     	;# 
   111  0213                     	;# 
   112  0213                     	;# 
   113  0214                     	;# 
   114  0214                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0215                     	;# 
   119  0216                     	;# 
   120  0216                     	;# 
   121  0217                     	;# 
   122  0217                     	;# 
   123  0291                     	;# 
   124  0292                     	;# 
   125  0293                     	;# 
   126  0294                     	;# 
   127  0295                     	;# 
   128  0295                     	;# 
   129  0296                     	;# 
   130  0298                     	;# 
   131  0299                     	;# 
   132  029A                     	;# 
   133  029B                     	;# 
   134  029C                     	;# 
   135  029D                     	;# 
   136  029E                     	;# 
   137  029E                     	;# 
   138  0311                     	;# 
   139  0312                     	;# 
   140  0313                     	;# 
   141  0318                     	;# 
   142  0319                     	;# 
   143  031A                     	;# 
   144  038C                     	;# 
   145  038E                     	;# 
   146  0391                     	;# 
   147  0392                     	;# 
   148  0393                     	;# 
   149  039A                     	;# 
   150  039C                     	;# 
   151  039D                     	;# 
   152  039E                     	;# 
   153  039F                     	;# 
   154  0415                     	;# 
   155  0416                     	;# 
   156  0417                     	;# 
   157  041C                     	;# 
   158  041D                     	;# 
   159  041E                     	;# 
   160  0FE4                     	;# 
   161  0FE5                     	;# 
   162  0FE6                     	;# 
   163  0FE7                     	;# 
   164  0FE8                     	;# 
   165  0FE9                     	;# 
   166  0FEA                     	;# 
   167  0FEB                     	;# 
   168  0FED                     	;# 
   169  0FEE                     	;# 
   170  0FEF                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000E                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  008C                     	;# 
   200  008E                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  010C                     	;# 
   216  010E                     	;# 
   217  0111                     	;# 
   218  0112                     	;# 
   219  0113                     	;# 
   220  0114                     	;# 
   221  0115                     	;# 
   222  0116                     	;# 
   223  0117                     	;# 
   224  0118                     	;# 
   225  0119                     	;# 
   226  011A                     	;# 
   227  011B                     	;# 
   228  011D                     	;# 
   229  011E                     	;# 
   230  018C                     	;# 
   231  018E                     	;# 
   232  0191                     	;# 
   233  0191                     	;# 
   234  0192                     	;# 
   235  0193                     	;# 
   236  0193                     	;# 
   237  0193                     	;# 
   238  0194                     	;# 
   239  0195                     	;# 
   240  0196                     	;# 
   241  0199                     	;# 
   242  019A                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019C                     	;# 
   246  019D                     	;# 
   247  019E                     	;# 
   248  019F                     	;# 
   249  020C                     	;# 
   250  020E                     	;# 
   251  0211                     	;# 
   252  0211                     	;# 
   253  0212                     	;# 
   254  0212                     	;# 
   255  0213                     	;# 
   256  0213                     	;# 
   257  0214                     	;# 
   258  0214                     	;# 
   259  0215                     	;# 
   260  0215                     	;# 
   261  0215                     	;# 
   262  0215                     	;# 
   263  0216                     	;# 
   264  0216                     	;# 
   265  0217                     	;# 
   266  0217                     	;# 
   267  0291                     	;# 
   268  0292                     	;# 
   269  0293                     	;# 
   270  0294                     	;# 
   271  0295                     	;# 
   272  0295                     	;# 
   273  0296                     	;# 
   274  0298                     	;# 
   275  0299                     	;# 
   276  029A                     	;# 
   277  029B                     	;# 
   278  029C                     	;# 
   279  029D                     	;# 
   280  029E                     	;# 
   281  029E                     	;# 
   282  0311                     	;# 
   283  0312                     	;# 
   284  0313                     	;# 
   285  0318                     	;# 
   286  0319                     	;# 
   287  031A                     	;# 
   288  038C                     	;# 
   289  038E                     	;# 
   290  0391                     	;# 
   291  0392                     	;# 
   292  0393                     	;# 
   293  039A                     	;# 
   294  039C                     	;# 
   295  039D                     	;# 
   296  039E                     	;# 
   297  039F                     	;# 
   298  0415                     	;# 
   299  0416                     	;# 
   300  0417                     	;# 
   301  041C                     	;# 
   302  041D                     	;# 
   303  041E                     	;# 
   304  0FE4                     	;# 
   305  0FE5                     	;# 
   306  0FE6                     	;# 
   307  0FE7                     	;# 
   308  0FE8                     	;# 
   309  0FE9                     	;# 
   310  0FEA                     	;# 
   311  0FEB                     	;# 
   312  0FED                     	;# 
   313  0FEE                     	;# 
   314  0FEF                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000E                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  008C                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  010C                     	;# 
   360  010E                     	;# 
   361  0111                     	;# 
   362  0112                     	;# 
   363  0113                     	;# 
   364  0114                     	;# 
   365  0115                     	;# 
   366  0116                     	;# 
   367  0117                     	;# 
   368  0118                     	;# 
   369  0119                     	;# 
   370  011A                     	;# 
   371  011B                     	;# 
   372  011D                     	;# 
   373  011E                     	;# 
   374  018C                     	;# 
   375  018E                     	;# 
   376  0191                     	;# 
   377  0191                     	;# 
   378  0192                     	;# 
   379  0193                     	;# 
   380  0193                     	;# 
   381  0193                     	;# 
   382  0194                     	;# 
   383  0195                     	;# 
   384  0196                     	;# 
   385  0199                     	;# 
   386  019A                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019C                     	;# 
   390  019D                     	;# 
   391  019E                     	;# 
   392  019F                     	;# 
   393  020C                     	;# 
   394  020E                     	;# 
   395  0211                     	;# 
   396  0211                     	;# 
   397  0212                     	;# 
   398  0212                     	;# 
   399  0213                     	;# 
   400  0213                     	;# 
   401  0214                     	;# 
   402  0214                     	;# 
   403  0215                     	;# 
   404  0215                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0216                     	;# 
   408  0216                     	;# 
   409  0217                     	;# 
   410  0217                     	;# 
   411  0291                     	;# 
   412  0292                     	;# 
   413  0293                     	;# 
   414  0294                     	;# 
   415  0295                     	;# 
   416  0295                     	;# 
   417  0296                     	;# 
   418  0298                     	;# 
   419  0299                     	;# 
   420  029A                     	;# 
   421  029B                     	;# 
   422  029C                     	;# 
   423  029D                     	;# 
   424  029E                     	;# 
   425  029E                     	;# 
   426  0311                     	;# 
   427  0312                     	;# 
   428  0313                     	;# 
   429  0318                     	;# 
   430  0319                     	;# 
   431  031A                     	;# 
   432  038C                     	;# 
   433  038E                     	;# 
   434  0391                     	;# 
   435  0392                     	;# 
   436  0393                     	;# 
   437  039A                     	;# 
   438  039C                     	;# 
   439  039D                     	;# 
   440  039E                     	;# 
   441  039F                     	;# 
   442  0415                     	;# 
   443  0416                     	;# 
   444  0417                     	;# 
   445  041C                     	;# 
   446  041D                     	;# 
   447  041E                     	;# 
   448  0FE4                     	;# 
   449  0FE5                     	;# 
   450  0FE6                     	;# 
   451  0FE7                     	;# 
   452  0FE8                     	;# 
   453  0FE9                     	;# 
   454  0FEA                     	;# 
   455  0FEB                     	;# 
   456  0FED                     	;# 
   457  0FEE                     	;# 
   458  0FEF                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000E                     	;# 
   473  0011                     	;# 
   474  0012                     	;# 
   475  0013                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0016                     	;# 
   479  0017                     	;# 
   480  0018                     	;# 
   481  0019                     	;# 
   482  001A                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001E                     	;# 
   486  001F                     	;# 
   487  008C                     	;# 
   488  008E                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0095                     	;# 
   493  0096                     	;# 
   494  0097                     	;# 
   495  0098                     	;# 
   496  0099                     	;# 
   497  009A                     	;# 
   498  009B                     	;# 
   499  009B                     	;# 
   500  009C                     	;# 
   501  009D                     	;# 
   502  009E                     	;# 
   503  010C                     	;# 
   504  010E                     	;# 
   505  0111                     	;# 
   506  0112                     	;# 
   507  0113                     	;# 
   508  0114                     	;# 
   509  0115                     	;# 
   510  0116                     	;# 
   511  0117                     	;# 
   512  0118                     	;# 
   513  0119                     	;# 
   514  011A                     	;# 
   515  011B                     	;# 
   516  011D                     	;# 
   517  011E                     	;# 
   518  018C                     	;# 
   519  018E                     	;# 
   520  0191                     	;# 
   521  0191                     	;# 
   522  0192                     	;# 
   523  0193                     	;# 
   524  0193                     	;# 
   525  0193                     	;# 
   526  0194                     	;# 
   527  0195                     	;# 
   528  0196                     	;# 
   529  0199                     	;# 
   530  019A                     	;# 
   531  019B                     	;# 
   532  019B                     	;# 
   533  019C                     	;# 
   534  019D                     	;# 
   535  019E                     	;# 
   536  019F                     	;# 
   537  020C                     	;# 
   538  020E                     	;# 
   539  0211                     	;# 
   540  0211                     	;# 
   541  0212                     	;# 
   542  0212                     	;# 
   543  0213                     	;# 
   544  0213                     	;# 
   545  0214                     	;# 
   546  0214                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0215                     	;# 
   550  0215                     	;# 
   551  0216                     	;# 
   552  0216                     	;# 
   553  0217                     	;# 
   554  0217                     	;# 
   555  0291                     	;# 
   556  0292                     	;# 
   557  0293                     	;# 
   558  0294                     	;# 
   559  0295                     	;# 
   560  0295                     	;# 
   561  0296                     	;# 
   562  0298                     	;# 
   563  0299                     	;# 
   564  029A                     	;# 
   565  029B                     	;# 
   566  029C                     	;# 
   567  029D                     	;# 
   568  029E                     	;# 
   569  029E                     	;# 
   570  0311                     	;# 
   571  0312                     	;# 
   572  0313                     	;# 
   573  0318                     	;# 
   574  0319                     	;# 
   575  031A                     	;# 
   576  038C                     	;# 
   577  038E                     	;# 
   578  0391                     	;# 
   579  0392                     	;# 
   580  0393                     	;# 
   581  039A                     	;# 
   582  039C                     	;# 
   583  039D                     	;# 
   584  039E                     	;# 
   585  039F                     	;# 
   586  0415                     	;# 
   587  0416                     	;# 
   588  0417                     	;# 
   589  041C                     	;# 
   590  041D                     	;# 
   591  041E                     	;# 
   592  0FE4                     	;# 
   593  0FE5                     	;# 
   594  0FE6                     	;# 
   595  0FE7                     	;# 
   596  0FE8                     	;# 
   597  0FE9                     	;# 
   598  0FEA                     	;# 
   599  0FEB                     	;# 
   600  0FED                     	;# 
   601  0FEE                     	;# 
   602  0FEF                     	;# 
   603  0000                     	;# 
   604  0001                     	;# 
   605  0002                     	;# 
   606  0003                     	;# 
   607  0004                     	;# 
   608  0005                     	;# 
   609  0006                     	;# 
   610  0007                     	;# 
   611  0008                     	;# 
   612  0009                     	;# 
   613  000A                     	;# 
   614  000B                     	;# 
   615  000C                     	;# 
   616  000E                     	;# 
   617  0011                     	;# 
   618  0012                     	;# 
   619  0013                     	;# 
   620  0015                     	;# 
   621  0016                     	;# 
   622  0016                     	;# 
   623  0017                     	;# 
   624  0018                     	;# 
   625  0019                     	;# 
   626  001A                     	;# 
   627  001B                     	;# 
   628  001C                     	;# 
   629  001E                     	;# 
   630  001F                     	;# 
   631  008C                     	;# 
   632  008E                     	;# 
   633  0091                     	;# 
   634  0092                     	;# 
   635  0093                     	;# 
   636  0095                     	;# 
   637  0096                     	;# 
   638  0097                     	;# 
   639  0098                     	;# 
   640  0099                     	;# 
   641  009A                     	;# 
   642  009B                     	;# 
   643  009B                     	;# 
   644  009C                     	;# 
   645  009D                     	;# 
   646  009E                     	;# 
   647  010C                     	;# 
   648  010E                     	;# 
   649  0111                     	;# 
   650  0112                     	;# 
   651  0113                     	;# 
   652  0114                     	;# 
   653  0115                     	;# 
   654  0116                     	;# 
   655  0117                     	;# 
   656  0118                     	;# 
   657  0119                     	;# 
   658  011A                     	;# 
   659  011B                     	;# 
   660  011D                     	;# 
   661  011E                     	;# 
   662  018C                     	;# 
   663  018E                     	;# 
   664  0191                     	;# 
   665  0191                     	;# 
   666  0192                     	;# 
   667  0193                     	;# 
   668  0193                     	;# 
   669  0193                     	;# 
   670  0194                     	;# 
   671  0195                     	;# 
   672  0196                     	;# 
   673  0199                     	;# 
   674  019A                     	;# 
   675  019B                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  019D                     	;# 
   679  019E                     	;# 
   680  019F                     	;# 
   681  020C                     	;# 
   682  020E                     	;# 
   683  0211                     	;# 
   684  0211                     	;# 
   685  0212                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0216                     	;# 
   696  0216                     	;# 
   697  0217                     	;# 
   698  0217                     	;# 
   699  0291                     	;# 
   700  0292                     	;# 
   701  0293                     	;# 
   702  0294                     	;# 
   703  0295                     	;# 
   704  0295                     	;# 
   705  0296                     	;# 
   706  0298                     	;# 
   707  0299                     	;# 
   708  029A                     	;# 
   709  029B                     	;# 
   710  029C                     	;# 
   711  029D                     	;# 
   712  029E                     	;# 
   713  029E                     	;# 
   714  0311                     	;# 
   715  0312                     	;# 
   716  0313                     	;# 
   717  0318                     	;# 
   718  0319                     	;# 
   719  031A                     	;# 
   720  038C                     	;# 
   721  038E                     	;# 
   722  0391                     	;# 
   723  0392                     	;# 
   724  0393                     	;# 
   725  039A                     	;# 
   726  039C                     	;# 
   727  039D                     	;# 
   728  039E                     	;# 
   729  039F                     	;# 
   730  0415                     	;# 
   731  0416                     	;# 
   732  0417                     	;# 
   733  041C                     	;# 
   734  041D                     	;# 
   735  041E                     	;# 
   736  0FE4                     	;# 
   737  0FE5                     	;# 
   738  0FE6                     	;# 
   739  0FE7                     	;# 
   740  0FE8                     	;# 
   741  0FE9                     	;# 
   742  0FEA                     	;# 
   743  0FEB                     	;# 
   744  0FED                     	;# 
   745  0FEE                     	;# 
   746  0FEF                     	;# 
   747                           
   748                           	psect	idataBANK0
   749  01E5                     __pidataBANK0:	
   750                           
   751                           ;initializer for _VTH
   752  01E5  3453               	retlw	83
   753  01E6  3402               	retlw	2
   754  01E7  3479               	retlw	121
   755  01E8  3402               	retlw	2
   756  01E9  3493               	retlw	147
   757  01EA  3402               	retlw	2
   758  01EB  34C3               	retlw	195
   759  01EC  3402               	retlw	2
   760  01ED  34E8               	retlw	232
   761  01EE  3402               	retlw	2
   762  01EF  340D               	retlw	13
   763  01F0  3403               	retlw	3
   764  01F1  3433               	retlw	51
   765  01F2  3403               	retlw	3
   766                           
   767                           ;initializer for _blink_ds
   768  01F3  340A               	retlw	10
   769  000B                     _INTCONbits	set	11
   770  0011                     _PIR1bits	set	17
   771  0012                     _PIR2bits	set	18
   772  000C                     _PORTA	set	12
   773  000E                     _PORTC	set	14
   774  0018                     _T1CON	set	24
   775  0017                     _TMR1H	set	23
   776  0016                     _TMR1L	set	22
   777  0060                     _RA0	set	96
   778  0062                     _RA2	set	98
   779  0064                     _RA4	set	100
   780  0070                     _RC0	set	112
   781  0071                     _RC1	set	113
   782  0072                     _RC2	set	114
   783  0073                     _RC3	set	115
   784  0074                     _RC4	set	116
   785  0075                     _RC5	set	117
   786  009D                     _ADCON0	set	157
   787  009D                     _ADCON0bits	set	157
   788  009E                     _ADCON1	set	158
   789  009E                     _ADCON1bits	set	158
   790  009C                     _ADRESH	set	156
   791  009B                     _ADRESL	set	155
   792  0099                     _OSCCON	set	153
   793  0091                     _PIE1bits	set	145
   794  008C                     _TRISA	set	140
   795  008E                     _TRISC	set	142
   796  010C                     _LATA	set	268
   797  010E                     _LATC	set	270
   798  018C                     _ANSELA	set	396
   799  018E                     _ANSELC	set	398
   800  0212                     _SSP1ADD	set	530
   801  0211                     _SSP1BUF	set	529
   802  0215                     _SSP1CON1	set	533
   803  0215                     _SSP1CON1bits	set	533
   804  0216                     _SSP1CON2	set	534
   805  0216                     _SSP1CON2bits	set	534
   806  0214                     _SSP1STATbits	set	532
   807                           
   808                           ; #config settings
   809  0000                     
   810                           	psect	cinit
   811  01BD                     start_initialization:	
   812  01BD                     __initialization:	
   813                           
   814                           ; Clear objects allocated to BANK0
   815  01BD  01BA               	clrf	__pbssBANK0& (0+127)
   816  01BE  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   817  01BF  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   818  01C0  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   819  01C1  01BE               	clrf	(__pbssBANK0+4)& (0+127)
   820  01C2  01BF               	clrf	(__pbssBANK0+5)& (0+127)
   821  01C3  01C0               	clrf	(__pbssBANK0+6)& (0+127)
   822  01C4  01C1               	clrf	(__pbssBANK0+7)& (0+127)
   823  01C5  01C2               	clrf	(__pbssBANK0+8)& (0+127)
   824  01C6  01C3               	clrf	(__pbssBANK0+9)& (0+127)
   825                           
   826                           ; Initialize objects allocated to BANK0
   827  01C7  30E5               	movlw	low __pidataBANK0
   828  01C8  0084               	movwf	4
   829  01C9  3081               	movlw	(high __pidataBANK0)| (0+128)
   830  01CA  0085               	movwf	5
   831  01CB  3020               	movlw	low __pdataBANK0
   832  01CC  0086               	movwf	6
   833  01CD  3000               	movlw	high __pdataBANK0
   834  01CE  0087               	movwf	7
   835  01CF  300F               	movlw	15
   836  01D0  3182  2234         	fcall	init_ram
   837  01D2                     end_of_initialization:	
   838                           ;End of C runtime variable initialization code
   839                           
   840  01D2                     __end_of__initialization:	
   841  01D2  0020               	movlb	0
   842  01D3  3180  28C0         	ljmp	_main	;jump to C main() function
   843                           
   844                           	psect	bssBANK0
   845  003A                     __pbssBANK0:	
   846  003A                     _adc_buffer:	
   847  003A                     	ds	2
   848  003C                     _cont:	
   849  003C                     	ds	1
   850  003D                     _timer_100ms:	
   851  003D                     	ds	1
   852  003E                     _timer_100us:	
   853  003E                     	ds	1
   854  003F                     _timer_10ms:	
   855  003F                     	ds	1
   856  0040                     _timer_1ms:	
   857  0040                     	ds	1
   858  0041                     _timer_1s:	
   859  0041                     	ds	1
   860  0042                     _timer_blink:	
   861  0042                     	ds	1
   862  0043                     _toggle:	
   863  0043                     	ds	1
   864                           
   865                           	psect	dataBANK0
   866  0020                     __pdataBANK0:	
   867  0020                     _VTH:	
   868  0020                     	ds	14
   869  002E                     _blink_ds:	
   870  002E                     	ds	1
   871                           
   872                           	psect	inittext
   873  0234                     init_ram:	
   874  0234  00FE               	movwf	126
   875  0235                     initloop:	
   876  0235  0012               	moviw fsr0++
   877  0236  001E               	movwi fsr1++
   878  0237  0BFE               	decfsz	126,f
   879  0238  2A35               	goto	initloop
   880  0239  3400               	retlw	0
   881                           
   882                           	psect	cstackCOMMON
   883  0070                     __pcstackCOMMON:	
   884  0070                     ?_ConfigureOscillator:	
   885  0070                     ?_InitApp:	
   886                           ; 0 bytes @ 0x0
   887                           
   888  0070                     ?_I2cInitMaster:	
   889                           ; 0 bytes @ 0x0
   890                           
   891  0070                     ?_I2cStart:	
   892                           ; 0 bytes @ 0x0
   893                           
   894  0070                     ?_I2cStop:	
   895                           ; 0 bytes @ 0x0
   896                           
   897  0070                     ?_displayCharge:	
   898                           ; 0 bytes @ 0x0
   899                           
   900  0070                     ?_readButton:	
   901                           ; 0 bytes @ 0x0
   902                           
   903  0070                     ?_lightupLed:	
   904                           ; 0 bytes @ 0x0
   905                           
   906  0070                     ?_isr:	
   907                           ; 0 bytes @ 0x0
   908                           
   909  0070                     ??_isr:	
   910                           ; 0 bytes @ 0x0
   911                           
   912  0070                     ?_main:	
   913                           ; 0 bytes @ 0x0
   914                           
   915  0070                     ?_I2cWait:	
   916                           ; 0 bytes @ 0x0
   917                           
   918  0070                     ?_I2cWaitForIdle:	
   919                           ; 0 bytes @ 0x0
   920                           
   921  0070                     ?_I2cWriteMaster:	
   922                           ; 0 bytes @ 0x0
   923                           
   924  0070                     ?_read_adc:	
   925                           ; 1 bytes @ 0x0
   926                           
   927                           
   928                           ; 2 bytes @ 0x0
   929  0070                     	ds	8
   930                           
   931                           	psect	cstackBANK0
   932  002F                     __pcstackBANK0:	
   933  002F                     ??_ConfigureOscillator:	
   934  002F                     ??_InitApp:	
   935                           ; 0 bytes @ 0x0
   936                           
   937  002F                     ??_I2cInitMaster:	
   938                           ; 0 bytes @ 0x0
   939                           
   940  002F                     ?_blink:	
   941                           ; 0 bytes @ 0x0
   942                           
   943  002F                     ??_read_adc:	
   944                           ; 0 bytes @ 0x0
   945                           
   946  002F                     ??_readButton:	
   947                           ; 0 bytes @ 0x0
   948                           
   949  002F                     ??_lightupLed:	
   950                           ; 0 bytes @ 0x0
   951                           
   952  002F                     ??_I2cWait:	
   953                           ; 0 bytes @ 0x0
   954                           
   955  002F                     ??_I2cWaitForIdle:	
   956                           ; 0 bytes @ 0x0
   957                           
   958  002F                     read_adc@input:	
   959                           ; 0 bytes @ 0x0
   960                           
   961                           
   962                           ; 1 bytes @ 0x0
   963  002F                     	ds	1
   964  0030                     ??_I2cStart:	
   965  0030                     ??_I2cWriteMaster:	
   966                           ; 0 bytes @ 0x1
   967                           
   968  0030                     ??_I2cStop:	
   969                           ; 0 bytes @ 0x1
   970                           
   971  0030                     I2cWriteMaster@data:	
   972                           ; 0 bytes @ 0x1
   973                           
   974                           
   975                           ; 1 bytes @ 0x1
   976  0030                     	ds	1
   977  0031                     ??_blink:	
   978  0031                     _lightupLed$188:	
   979                           ; 0 bytes @ 0x2
   980                           
   981                           
   982                           ; 1 bytes @ 0x2
   983  0031                     	ds	1
   984  0032                     _lightupLed$189:	
   985                           
   986                           ; 1 bytes @ 0x3
   987  0032                     	ds	1
   988  0033                     _lightupLed$190:	
   989                           
   990                           ; 1 bytes @ 0x4
   991  0033                     	ds	1
   992  0034                     _lightupLed$191:	
   993                           
   994                           ; 1 bytes @ 0x5
   995  0034                     	ds	1
   996  0035                     lightupLed@blink:	
   997                           
   998                           ; 1 bytes @ 0x6
   999  0035                     	ds	1
  1000  0036                     lightupLed@lightup:	
  1001                           
  1002                           ; 1 bytes @ 0x7
  1003  0036                     	ds	1
  1004  0037                     ??_displayCharge:	
  1005                           
  1006                           ; 0 bytes @ 0x8
  1007  0037                     	ds	1
  1008  0038                     ??_main:	
  1009                           
  1010                           ; 0 bytes @ 0x9
  1011  0038                     	ds	2
  1012                           
  1013                           	psect	maintext
  1014  00C0                     __pmaintext:	
  1015 ;;
  1016 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1017 ;;
  1018 ;; *************** function _main *****************
  1019 ;; Defined at:
  1020 ;;		line 66 in file "main.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;		None               void
  1027 ;; Registers used:
  1028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 17F/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1034 ;;      Params:         0       0       0       0
  1035 ;;      Locals:         0       0       0       0
  1036 ;;      Temps:          0       2       0       0
  1037 ;;      Totals:         0       2       0       0
  1038 ;;Total ram usage:        2 bytes
  1039 ;; Hardware stack levels required when called:    3
  1040 ;; This function calls:
  1041 ;;		_ConfigureOscillator
  1042 ;;		_InitApp
  1043 ;;		_I2cInitMaster
  1044 ;;		_I2cStart
  1045 ;;		_I2cWriteMaster
  1046 ;;		_I2cStop
  1047 ;;		_blink
  1048 ;;		_read_adc
  1049 ;;		_displayCharge
  1050 ;;		_readButton
  1051 ;; This function is called by:
  1052 ;;		Startup code after reset
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _main
  1058  00C0                     _main:	
  1059                           
  1060                           ;main.c: 68: ConfigureOscillator();
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _main: [allreg]
  1064  00C0  3182  223F  3180   	fcall	_ConfigureOscillator
  1065                           
  1066                           ;main.c: 71: InitApp();
  1067  00C3  3181  217E  3180   	fcall	_InitApp
  1068                           
  1069                           ;main.c: 72: I2cInitMaster();
  1070  00C6  3181  21F4  3180   	fcall	_I2cInitMaster
  1071  00C9                     l1007:	
  1072                           ;main.c: 74: while(1)
  1073                           
  1074                           
  1075                           ;main.c: 75: {
  1076                           ;main.c: 76: if (timer_100us >= 1){
  1077  00C9  0020               	movlb	0	; select bank0
  1078  00CA  083E               	movf	_timer_100us,w
  1079  00CB  1903               	btfsc	3,2
  1080  00CC  28D2               	goto	l1013
  1081                           
  1082                           ;main.c: 77: timer_100us=0;
  1083  00CD  01BE               	clrf	_timer_100us
  1084                           
  1085                           ;main.c: 78: timer_1ms++;
  1086  00CE  3001               	movlw	1
  1087  00CF  00B8               	movwf	??_main
  1088  00D0  0838               	movf	??_main,w
  1089  00D1  07C0               	addwf	_timer_1ms,f
  1090  00D2                     l1013:	
  1091                           
  1092                           ;main.c: 80: }
  1093                           ;main.c: 82: if (timer_1ms >= 10){
  1094  00D2  300A               	movlw	10
  1095  00D3  0240               	subwf	_timer_1ms,w
  1096  00D4  1C03               	skipc
  1097  00D5  28F2               	goto	l1027
  1098                           
  1099                           ;main.c: 83: timer_1ms=0;
  1100  00D6  01C0               	clrf	_timer_1ms
  1101                           
  1102                           ;main.c: 84: timer_10ms++;
  1103  00D7  3001               	movlw	1
  1104  00D8  00B8               	movwf	??_main
  1105  00D9  0838               	movf	??_main,w
  1106  00DA  07BF               	addwf	_timer_10ms,f
  1107                           
  1108                           ;main.c: 85: I2cStart();
  1109  00DB  3182  222A  3180   	fcall	_I2cStart
  1110                           
  1111                           ;main.c: 86: I2cWriteMaster(ADRESH);
  1112  00DE  0021               	movlb	1	; select bank1
  1113  00DF  081C               	movf	28,w	;volatile
  1114  00E0  3182  2203  3180   	fcall	_I2cWriteMaster
  1115                           
  1116                           ;main.c: 87: I2cWriteMaster(ADRESL>>6);
  1117  00E3  0021               	movlb	1	; select bank1
  1118  00E4  081B               	movf	27,w	;volatile
  1119  00E5  0020               	movlb	0	; select bank0
  1120  00E6  00B8               	movwf	??_main
  1121  00E7  3006               	movlw	6
  1122  00E8                     u415:	
  1123  00E8  36B8               	lsrf	??_main,f
  1124  00E9  0B89               	decfsz	9,f
  1125  00EA  28E8               	goto	u415
  1126  00EB  0838               	movf	??_main,w
  1127  00EC  3182  2203  3180   	fcall	_I2cWriteMaster
  1128                           
  1129                           ;main.c: 90: I2cStop();
  1130  00EF  3182  221F  3180   	fcall	_I2cStop
  1131  00F2                     l1027:	
  1132                           
  1133                           ;main.c: 92: }
  1134                           ;main.c: 94: if (timer_10ms >= 10){
  1135  00F2  300A               	movlw	10
  1136  00F3  0020               	movlb	0	; select bank0
  1137  00F4  023F               	subwf	_timer_10ms,w
  1138  00F5  1C03               	skipc
  1139  00F6  28FC               	goto	l1033
  1140                           
  1141                           ;main.c: 95: timer_10ms=0;
  1142  00F7  01BF               	clrf	_timer_10ms
  1143                           
  1144                           ;main.c: 96: timer_100ms++;
  1145  00F8  3001               	movlw	1
  1146  00F9  00B8               	movwf	??_main
  1147  00FA  0838               	movf	??_main,w
  1148  00FB  07BD               	addwf	_timer_100ms,f
  1149  00FC                     l1033:	
  1150                           
  1151                           ;main.c: 98: }
  1152                           ;main.c: 100: if (timer_100ms >= 10){
  1153  00FC  300A               	movlw	10
  1154  00FD  023D               	subwf	_timer_100ms,w
  1155  00FE  1C03               	skipc
  1156  00FF  2923               	goto	l1051
  1157                           
  1158                           ;main.c: 101: timer_100ms=0;
  1159  0100  01BD               	clrf	_timer_100ms
  1160                           
  1161                           ;main.c: 102: timer_1s++;
  1162  0101  3001               	movlw	1
  1163  0102  00B8               	movwf	??_main
  1164  0103  0838               	movf	??_main,w
  1165  0104  07C1               	addwf	_timer_1s,f
  1166                           
  1167                           ;main.c: 104: blink(blink_ds);
  1168  0105  082E               	movf	_blink_ds,w
  1169  0106  00B8               	movwf	??_main
  1170  0107  01B9               	clrf	??_main+1
  1171  0108  0838               	movf	??_main,w
  1172  0109  00AF               	movwf	?_blink
  1173  010A  0839               	movf	??_main+1,w
  1174  010B  00B0               	movwf	?_blink+1
  1175  010C  3181  21D5  3180   	fcall	_blink
  1176                           
  1177                           ;main.c: 106: if(!PIR1bits.ADIF) {read_adc(RC3);}
  1178  010F  0020               	movlb	0	; select bank0
  1179  0110  1B11               	btfsc	17,6	;volatile
  1180  0111  2918               	goto	l1045
  1181  0112  3000               	movlw	0
  1182  0113  198E               	btfsc	14,3	;volatile
  1183  0114  3001               	movlw	1
  1184  0115  3181  21A1  3180   	fcall	_read_adc
  1185  0118                     l1045:	
  1186                           
  1187                           ;main.c: 107: displayCharge();
  1188  0118  3180  2035  3180   	fcall	_displayCharge
  1189                           
  1190                           ;main.c: 108: readButton();
  1191  011B  3182  2242  3180   	fcall	_readButton
  1192                           
  1193                           ;main.c: 109: cont++;
  1194  011E  3001               	movlw	1
  1195  011F  0020               	movlb	0	; select bank0
  1196  0120  00B8               	movwf	??_main
  1197  0121  0838               	movf	??_main,w
  1198  0122  07BC               	addwf	_cont,f
  1199  0123                     l1051:	
  1200                           
  1201                           ;main.c: 111: }
  1202                           ;main.c: 113: if (timer_1s >= 10){
  1203  0123  300A               	movlw	10
  1204  0124  0241               	subwf	_timer_1s,w
  1205  0125  1C03               	skipc
  1206  0126  28C9               	goto	l1007
  1207                           
  1208                           ;main.c: 114: timer_1s=0;
  1209  0127  01C1               	clrf	_timer_1s
  1210  0128  28C9               	goto	l1007
  1211  0129                     __end_of_main:	
  1212                           
  1213                           	psect	text1
  1214  0242                     __ptext1:	
  1215 ;; *************** function _readButton *****************
  1216 ;; Defined at:
  1217 ;;		line 127 in file "main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;		None               void
  1224 ;; Registers used:
  1225 ;;		None
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1231 ;;      Params:         0       0       0       0
  1232 ;;      Locals:         0       0       0       0
  1233 ;;      Temps:          0       0       0       0
  1234 ;;      Totals:         0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    1
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           
  1246                           ;psect for function _readButton
  1247  0242                     _readButton:	
  1248                           
  1249                           ;main.c: 128: if(RA0==1){
  1250                           
  1251                           ;incstack = 0
  1252                           ; Regs used in _readButton: []
  1253  0242  0008               	return
  1254  0243                     __end_of_readButton:	
  1255                           
  1256                           	psect	text2
  1257  0035                     __ptext2:	
  1258 ;; *************** function _displayCharge *****************
  1259 ;; Defined at:
  1260 ;;		line 133 in file "main.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;		None               void
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, pclath, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1274 ;;      Params:         0       0       0       0
  1275 ;;      Locals:         0       0       0       0
  1276 ;;      Temps:          0       1       0       0
  1277 ;;      Totals:         0       1       0       0
  1278 ;;Total ram usage:        1 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    2
  1281 ;; This function calls:
  1282 ;;		_lightupLed
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _displayCharge
  1290  0035                     _displayCharge:	
  1291                           
  1292                           ;main.c: 134: if(adc_buffer < VTH[0]){
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _displayCharge: [wreg+status,2+status,0+pclath+cstack]
  1296  0035  0020               	movlb	0	; select bank0
  1297  0036  083B               	movf	_adc_buffer+1,w
  1298  0037  3A80               	xorlw	128
  1299  0038  00B7               	movwf	??_displayCharge
  1300  0039  0821               	movf	_VTH+1,w
  1301  003A  3A80               	xorlw	128
  1302  003B  0237               	subwf	??_displayCharge,w
  1303  003C  1D03               	skipz
  1304  003D  2840               	goto	u495
  1305  003E  0820               	movf	_VTH,w
  1306  003F  023A               	subwf	_adc_buffer,w
  1307  0040                     u495:	
  1308  0040  1803               	skipnc
  1309  0041  2849               	goto	l1155
  1310                           
  1311                           ;main.c: 135: blink_ds=1;
  1312  0042  0020               	movlb	0	; select bank0
  1313  0043  01AE               	clrf	_blink_ds
  1314  0044  0AAE               	incf	_blink_ds,f
  1315                           
  1316                           ;main.c: 136: lightupLed(0b00010001);
  1317  0045  3011               	movlw	17
  1318  0046  3181  2129         	fcall	_lightupLed
  1319                           
  1320                           ;main.c: 137: }
  1321  0048  0008               	return
  1322  0049                     l1155:	
  1323                           
  1324                           ;main.c: 138: else if(adc_buffer < VTH[1]){
  1325  0049  0020               	movlb	0	; select bank0
  1326  004A  083B               	movf	_adc_buffer+1,w
  1327  004B  3A80               	xorlw	128
  1328  004C  00B7               	movwf	??_displayCharge
  1329  004D  0823               	movf	_VTH+3,w
  1330  004E  3A80               	xorlw	128
  1331  004F  0237               	subwf	??_displayCharge,w
  1332  0050  1D03               	skipz
  1333  0051  2854               	goto	u505
  1334  0052  0822               	movf	_VTH+2,w
  1335  0053  023A               	subwf	_adc_buffer,w
  1336  0054                     u505:	
  1337  0054  1803               	skipnc
  1338  0055  285F               	goto	l1161
  1339                           
  1340                           ;main.c: 139: blink_ds=2;
  1341  0056  3002               	movlw	2
  1342  0057  0020               	movlb	0	; select bank0
  1343  0058  00B7               	movwf	??_displayCharge
  1344  0059  0837               	movf	??_displayCharge,w
  1345  005A  00AE               	movwf	_blink_ds
  1346                           
  1347                           ;main.c: 140: lightupLed(0b00010001);
  1348  005B  3011               	movlw	17
  1349  005C  3181  2129         	fcall	_lightupLed
  1350                           
  1351                           ;main.c: 141: }
  1352  005E  0008               	return
  1353  005F                     l1161:	
  1354                           
  1355                           ;main.c: 142: else if(adc_buffer < VTH[2]){
  1356  005F  0020               	movlb	0	; select bank0
  1357  0060  083B               	movf	_adc_buffer+1,w
  1358  0061  3A80               	xorlw	128
  1359  0062  00B7               	movwf	??_displayCharge
  1360  0063  0825               	movf	_VTH+5,w
  1361  0064  3A80               	xorlw	128
  1362  0065  0237               	subwf	??_displayCharge,w
  1363  0066  1D03               	skipz
  1364  0067  286A               	goto	u515
  1365  0068  0824               	movf	_VTH+4,w
  1366  0069  023A               	subwf	_adc_buffer,w
  1367  006A                     u515:	
  1368  006A  1803               	skipnc
  1369  006B  2870               	goto	l1165
  1370                           
  1371                           ;main.c: 143: lightupLed(0b00000001);
  1372  006C  3001               	movlw	1
  1373  006D  3181  2129         	fcall	_lightupLed
  1374                           
  1375                           ;main.c: 144: }
  1376  006F  0008               	return
  1377  0070                     l1165:	
  1378                           
  1379                           ;main.c: 145: else if(adc_buffer < VTH[3]){
  1380  0070  0020               	movlb	0	; select bank0
  1381  0071  083B               	movf	_adc_buffer+1,w
  1382  0072  3A80               	xorlw	128
  1383  0073  00B7               	movwf	??_displayCharge
  1384  0074  0827               	movf	_VTH+7,w
  1385  0075  3A80               	xorlw	128
  1386  0076  0237               	subwf	??_displayCharge,w
  1387  0077  1D03               	skipz
  1388  0078  287B               	goto	u525
  1389  0079  0826               	movf	_VTH+6,w
  1390  007A  023A               	subwf	_adc_buffer,w
  1391  007B                     u525:	
  1392  007B  1803               	skipnc
  1393  007C  2881               	goto	l1169
  1394                           
  1395                           ;main.c: 146: lightupLed(0b00000011);
  1396  007D  3003               	movlw	3
  1397  007E  3181  2129         	fcall	_lightupLed
  1398                           
  1399                           ;main.c: 147: }
  1400  0080  0008               	return
  1401  0081                     l1169:	
  1402                           
  1403                           ;main.c: 148: else if(adc_buffer < VTH[4]){
  1404  0081  0020               	movlb	0	; select bank0
  1405  0082  083B               	movf	_adc_buffer+1,w
  1406  0083  3A80               	xorlw	128
  1407  0084  00B7               	movwf	??_displayCharge
  1408  0085  0829               	movf	_VTH+9,w
  1409  0086  3A80               	xorlw	128
  1410  0087  0237               	subwf	??_displayCharge,w
  1411  0088  1D03               	skipz
  1412  0089  288C               	goto	u535
  1413  008A  0828               	movf	_VTH+8,w
  1414  008B  023A               	subwf	_adc_buffer,w
  1415  008C                     u535:	
  1416  008C  1803               	skipnc
  1417  008D  2892               	goto	l1173
  1418                           
  1419                           ;main.c: 149: lightupLed(0b00000111);
  1420  008E  3007               	movlw	7
  1421  008F  3181  2129         	fcall	_lightupLed
  1422                           
  1423                           ;main.c: 150: }
  1424  0091  0008               	return
  1425  0092                     l1173:	
  1426                           
  1427                           ;main.c: 151: else if(adc_buffer < VTH[5]){
  1428  0092  0020               	movlb	0	; select bank0
  1429  0093  083B               	movf	_adc_buffer+1,w
  1430  0094  3A80               	xorlw	128
  1431  0095  00B7               	movwf	??_displayCharge
  1432  0096  082B               	movf	_VTH+11,w
  1433  0097  3A80               	xorlw	128
  1434  0098  0237               	subwf	??_displayCharge,w
  1435  0099  1D03               	skipz
  1436  009A  289D               	goto	u545
  1437  009B  082A               	movf	_VTH+10,w
  1438  009C  023A               	subwf	_adc_buffer,w
  1439  009D                     u545:	
  1440  009D  1803               	skipnc
  1441  009E  28A3               	goto	l1177
  1442                           
  1443                           ;main.c: 152: lightupLed(0b00001111);
  1444  009F  300F               	movlw	15
  1445  00A0  3181  2129         	fcall	_lightupLed
  1446                           
  1447                           ;main.c: 153: }
  1448  00A2  0008               	return
  1449  00A3                     l1177:	
  1450                           
  1451                           ;main.c: 154: else if(adc_buffer < VTH[6]){
  1452  00A3  0020               	movlb	0	; select bank0
  1453  00A4  083B               	movf	_adc_buffer+1,w
  1454  00A5  3A80               	xorlw	128
  1455  00A6  00B7               	movwf	??_displayCharge
  1456  00A7  082D               	movf	_VTH+13,w
  1457  00A8  3A80               	xorlw	128
  1458  00A9  0237               	subwf	??_displayCharge,w
  1459  00AA  1D03               	skipz
  1460  00AB  28AE               	goto	u555
  1461  00AC  082C               	movf	_VTH+12,w
  1462  00AD  023A               	subwf	_adc_buffer,w
  1463  00AE                     u555:	
  1464  00AE  1803               	skipnc
  1465  00AF  28B9               	goto	l122
  1466                           
  1467                           ;main.c: 155: blink_ds=2;
  1468  00B0  3002               	movlw	2
  1469  00B1  0020               	movlb	0	; select bank0
  1470  00B2  00B7               	movwf	??_displayCharge
  1471  00B3  0837               	movf	??_displayCharge,w
  1472  00B4  00AE               	movwf	_blink_ds
  1473                           
  1474                           ;main.c: 156: lightupLed(0b00011111);
  1475  00B5  301F               	movlw	31
  1476  00B6  3181  2129         	fcall	_lightupLed
  1477                           
  1478                           ;main.c: 157: }
  1479  00B8  0008               	return
  1480  00B9                     l122:	
  1481                           
  1482                           ;main.c: 158: else{
  1483                           ;main.c: 159: blink_ds=1;
  1484  00B9  0020               	movlb	0	; select bank0
  1485  00BA  01AE               	clrf	_blink_ds
  1486  00BB  0AAE               	incf	_blink_ds,f
  1487                           
  1488                           ;main.c: 160: lightupLed(0b00011111);
  1489  00BC  301F               	movlw	31
  1490  00BD  3181  2129         	fcall	_lightupLed
  1491  00BF  0008               	return
  1492  00C0                     __end_of_displayCharge:	
  1493                           
  1494                           	psect	text3
  1495  0129                     __ptext3:	
  1496 ;; *************** function _lightupLed *****************
  1497 ;; Defined at:
  1498 ;;		line 164 in file "main.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  lightup         1    wreg     unsigned char 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  lightup         1    7[BANK0 ] unsigned char 
  1503 ;;  blink           1    6[BANK0 ] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;		None               void
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1513 ;;      Params:         0       0       0       0
  1514 ;;      Locals:         0       6       0       0
  1515 ;;      Temps:          0       2       0       0
  1516 ;;      Totals:         0       8       0       0
  1517 ;;Total ram usage:        8 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    1
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_displayCharge
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _lightupLed
  1529  0129                     _lightupLed:	
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _lightupLed: [wreg+status,2+status,0]
  1533                           ;lightupLed@lightup stored from wreg
  1534  0129  0020               	movlb	0	; select bank0
  1535  012A  00B6               	movwf	lightupLed@lightup
  1536                           
  1537                           ;main.c: 166: char blink = toggle & (lightup>>4 & 0x01);
  1538  012B  0836               	movf	lightupLed@lightup,w
  1539  012C  00AF               	movwf	??_lightupLed
  1540  012D  3004               	movlw	4
  1541  012E                     u565:	
  1542  012E  36AF               	lsrf	??_lightupLed,f
  1543  012F  0B89               	decfsz	9,f
  1544  0130  292E               	goto	u565
  1545  0131  082F               	movf	??_lightupLed,w
  1546  0132  0543               	andwf	_toggle,w
  1547  0133  3901               	andlw	1
  1548  0134  00B0               	movwf	??_lightupLed+1
  1549  0135  0830               	movf	??_lightupLed+1,w
  1550  0136  00B5               	movwf	lightupLed@blink
  1551                           
  1552                           ;main.c: 167: RA2 = (!(lightup & 0x01)) || blink;
  1553  0137  01B1               	clrf	_lightupLed$188
  1554  0138  0AB1               	incf	_lightupLed$188,f
  1555  0139  1C36               	btfss	lightupLed@lightup,0
  1556  013A  293F               	goto	l1197
  1557  013B  08B5               	movf	lightupLed@blink,f
  1558  013C  1D03               	skipz
  1559  013D  293F               	goto	l1197
  1560  013E  01B1               	clrf	_lightupLed$188
  1561  013F                     l1197:	
  1562  013F  0831               	movf	_lightupLed$188,w
  1563  0140  1D03               	skipz
  1564  0141  150C               	bsf	12,2	;volatile
  1565  0142  1903               	skipnz
  1566  0143  110C               	bcf	12,2	;volatile
  1567                           
  1568                           ;main.c: 168: RA4 = (!(lightup>>1 & 0x01)) || blink;
  1569  0144  01B2               	clrf	_lightupLed$189
  1570  0145  0AB2               	incf	_lightupLed$189,f
  1571  0146  0836               	movf	lightupLed@lightup,w
  1572  0147  00AF               	movwf	??_lightupLed
  1573  0148  3001               	movlw	1
  1574  0149                     u595:	
  1575  0149  36AF               	lsrf	??_lightupLed,f
  1576  014A  0B89               	decfsz	9,f
  1577  014B  2949               	goto	u595
  1578  014C  1C2F               	btfss	??_lightupLed,0
  1579  014D  2952               	goto	l1207
  1580  014E  08B5               	movf	lightupLed@blink,f
  1581  014F  1D03               	skipz
  1582  0150  2952               	goto	l1207
  1583  0151  01B2               	clrf	_lightupLed$189
  1584  0152                     l1207:	
  1585  0152  0832               	movf	_lightupLed$189,w
  1586  0153  1D03               	skipz
  1587  0154  160C               	bsf	12,4	;volatile
  1588  0155  1903               	skipnz
  1589  0156  120C               	bcf	12,4	;volatile
  1590                           
  1591                           ;main.c: 169: RC5 = (!(lightup>>2 & 0x01)) || blink;
  1592  0157  01B3               	clrf	_lightupLed$190
  1593  0158  0AB3               	incf	_lightupLed$190,f
  1594  0159  0836               	movf	lightupLed@lightup,w
  1595  015A  00AF               	movwf	??_lightupLed
  1596  015B  3002               	movlw	2
  1597  015C                     u625:	
  1598  015C  36AF               	lsrf	??_lightupLed,f
  1599  015D  0B89               	decfsz	9,f
  1600  015E  295C               	goto	u625
  1601  015F  1C2F               	btfss	??_lightupLed,0
  1602  0160  2965               	goto	l1217
  1603  0161  08B5               	movf	lightupLed@blink,f
  1604  0162  1D03               	skipz
  1605  0163  2965               	goto	l1217
  1606  0164  01B3               	clrf	_lightupLed$190
  1607  0165                     l1217:	
  1608  0165  0833               	movf	_lightupLed$190,w
  1609  0166  1D03               	skipz
  1610  0167  168E               	bsf	14,5	;volatile
  1611  0168  1903               	skipnz
  1612  0169  128E               	bcf	14,5	;volatile
  1613                           
  1614                           ;main.c: 170: RC4 = (!(lightup>>3 & 0x01)) || blink;
  1615  016A  01B4               	clrf	_lightupLed$191
  1616  016B  0AB4               	incf	_lightupLed$191,f
  1617  016C  0836               	movf	lightupLed@lightup,w
  1618  016D  00AF               	movwf	??_lightupLed
  1619  016E  3003               	movlw	3
  1620  016F                     u655:	
  1621  016F  36AF               	lsrf	??_lightupLed,f
  1622  0170  0B89               	decfsz	9,f
  1623  0171  296F               	goto	u655
  1624  0172  1C2F               	btfss	??_lightupLed,0
  1625  0173  2978               	goto	l1227
  1626  0174  08B5               	movf	lightupLed@blink,f
  1627  0175  1D03               	skipz
  1628  0176  2978               	goto	l1227
  1629  0177  01B4               	clrf	_lightupLed$191
  1630  0178                     l1227:	
  1631  0178  0834               	movf	_lightupLed$191,w
  1632  0179  1D03               	skipz
  1633  017A  160E               	bsf	14,4	;volatile
  1634  017B  1903               	skipnz
  1635  017C  120E               	bcf	14,4	;volatile
  1636  017D  0008               	return
  1637  017E                     __end_of_lightupLed:	
  1638                           
  1639                           	psect	text4
  1640  01A1                     __ptext4:	
  1641 ;; *************** function _read_adc *****************
  1642 ;; Defined at:
  1643 ;;		line 121 in file "main.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  input           1    wreg     unsigned char 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  input           1    0[BANK0 ] unsigned char 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2   41[COMMON] int 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1657 ;;      Params:         0       0       0       0
  1658 ;;      Locals:         0       1       0       0
  1659 ;;      Temps:          0       0       0       0
  1660 ;;      Totals:         0       1       0       0
  1661 ;;Total ram usage:        1 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    1
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           
  1672                           ;psect for function _read_adc
  1673  01A1                     _read_adc:	
  1674                           
  1675                           ;incstack = 0
  1676                           ; Regs used in _read_adc: [wreg+status,2+status,0]
  1677                           ;read_adc@input stored from wreg
  1678  01A1  0020               	movlb	0	; select bank0
  1679  01A2  00AF               	movwf	read_adc@input
  1680                           
  1681                           ;main.c: 122: if (input==RC3) {ADCON0bits.CHS=0b00111;}
  1682  01A3  3000               	movlw	0
  1683  01A4  198E               	btfsc	14,3	;volatile
  1684  01A5  3001               	movlw	1
  1685  01A6  062F               	xorwf	read_adc@input,w
  1686  01A7  1D03               	skipz
  1687  01A8  29AE               	goto	l1143
  1688  01A9  0021               	movlb	1	; select bank1
  1689  01AA  081D               	movf	29,w	;volatile
  1690  01AB  3983               	andlw	-125
  1691  01AC  381C               	iorlw	28
  1692  01AD  29B9               	goto	L1
  1693  01AE                     l1143:	
  1694                           
  1695                           ;main.c: 123: else if (input==RC2) {ADCON0bits.CHS=0b00110;}
  1696  01AE  3000               	movlw	0
  1697  01AF  0020               	movlb	0	; select bank0
  1698  01B0  190E               	btfsc	14,2	;volatile
  1699  01B1  3001               	movlw	1
  1700  01B2  062F               	xorwf	read_adc@input,w
  1701  01B3  1D03               	skipz
  1702  01B4  29BA               	goto	l1147
  1703  01B5  0021               	movlb	1	; select bank1
  1704  01B6  081D               	movf	29,w	;volatile
  1705  01B7  3983               	andlw	-125
  1706  01B8  3818               	iorlw	24
  1707  01B9                     L1:	
  1708  01B9  009D               	movwf	29	;volatile
  1709  01BA                     l1147:	
  1710                           
  1711                           ;main.c: 124: ADCON0bits.GO_nDONE=1;
  1712  01BA  0021               	movlb	1	; select bank1
  1713  01BB  149D               	bsf	29,1	;volatile
  1714  01BC  0008               	return
  1715  01BD                     __end_of_read_adc:	
  1716                           
  1717                           	psect	text5
  1718  01D5                     __ptext5:	
  1719 ;; *************** function _blink *****************
  1720 ;; Defined at:
  1721 ;;		line 180 in file "main.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;		None               void
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1735 ;;      Params:         0       2       0       0
  1736 ;;      Locals:         0       0       0       0
  1737 ;;      Temps:          0       1       0       0
  1738 ;;      Totals:         0       3       0       0
  1739 ;;Total ram usage:        3 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    1
  1742 ;; This function calls:
  1743 ;;		Nothing
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _blink
  1751  01D5                     _blink:	
  1752                           
  1753                           ;main.c: 181: timer_blink++;
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in _blink: [wreg+status,2+status,0]
  1757  01D5  3001               	movlw	1
  1758  01D6  0020               	movlb	0	; select bank0
  1759  01D7  00B1               	movwf	??_blink
  1760  01D8  0831               	movf	??_blink,w
  1761  01D9  07C2               	addwf	_timer_blink,f
  1762                           
  1763                           ;main.c: 182: if(timer_blink >= blink_ds){
  1764  01DA  082E               	movf	_blink_ds,w
  1765  01DB  0242               	subwf	_timer_blink,w
  1766  01DC  1C03               	skipc
  1767  01DD  0008               	return
  1768                           
  1769                           ;main.c: 183: toggle = toggle^1;
  1770  01DE  0843               	movf	_toggle,w
  1771  01DF  3A01               	xorlw	1
  1772  01E0  00B1               	movwf	??_blink
  1773  01E1  0831               	movf	??_blink,w
  1774  01E2  00C3               	movwf	_toggle
  1775                           
  1776                           ;main.c: 184: timer_blink=0;
  1777  01E3  01C2               	clrf	_timer_blink
  1778  01E4  0008               	return
  1779  01E5                     __end_of_blink:	
  1780                           
  1781                           	psect	text6
  1782  021F                     __ptext6:	
  1783 ;; *************** function _I2cStop *****************
  1784 ;; Defined at:
  1785 ;;		line 86 in file "i2c.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;		None               void
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0, pclath, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1799 ;;      Params:         0       0       0       0
  1800 ;;      Locals:         0       0       0       0
  1801 ;;      Temps:          0       0       0       0
  1802 ;;      Totals:         0       0       0       0
  1803 ;;Total ram usage:        0 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    2
  1806 ;; This function calls:
  1807 ;;		_I2cWait
  1808 ;;		_I2cWaitForIdle
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _I2cStop
  1816  021F                     _I2cStop:	
  1817                           
  1818                           ;i2c.c: 87: I2cWaitForIdle();
  1819                           
  1820                           ;incstack = 0
  1821                           ; Regs used in _I2cStop: [wreg+status,2+status,0+pclath+cstack]
  1822  021F  3182  2211  3182   	fcall	_I2cWaitForIdle
  1823                           
  1824                           ;i2c.c: 88: PIR1bits.SSP1IF = 0;
  1825  0222  0020               	movlb	0	; select bank0
  1826  0223  1191               	bcf	17,3	;volatile
  1827                           
  1828                           ;i2c.c: 89: SSP1CON2bits.PEN = 1;
  1829  0224  0024               	movlb	4	; select bank4
  1830  0225  1516               	bsf	22,2	;volatile
  1831                           
  1832                           ;i2c.c: 90: SSP1CON2bits.ACKEN = 1;
  1833  0226  1616               	bsf	22,4	;volatile
  1834                           
  1835                           ;i2c.c: 91: I2cWait();
  1836  0227  3182  223A         	fcall	_I2cWait
  1837  0229  0008               	return
  1838  022A                     __end_of_I2cStop:	
  1839                           
  1840                           	psect	text7
  1841  0203                     __ptext7:	
  1842 ;; *************** function _I2cWriteMaster *****************
  1843 ;; Defined at:
  1844 ;;		line 122 in file "i2c.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  data            1    wreg     unsigned char 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  data            1    1[BANK0 ] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      unsigned char 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, pclath, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1858 ;;      Params:         0       0       0       0
  1859 ;;      Locals:         0       1       0       0
  1860 ;;      Temps:          0       0       0       0
  1861 ;;      Totals:         0       1       0       0
  1862 ;;Total ram usage:        1 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    2
  1865 ;; This function calls:
  1866 ;;		_I2cWait
  1867 ;;		_I2cWaitForIdle
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function _I2cWriteMaster
  1875  0203                     _I2cWriteMaster:	
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _I2cWriteMaster: [wreg+status,2+status,0+pclath+cstack]
  1879                           ;I2cWriteMaster@data stored from wreg
  1880  0203  0020               	movlb	0	; select bank0
  1881  0204  00B0               	movwf	I2cWriteMaster@data
  1882                           
  1883                           ;i2c.c: 123: I2cWaitForIdle();
  1884  0205  3182  2211  3182   	fcall	_I2cWaitForIdle
  1885                           
  1886                           ;i2c.c: 124: SSP1BUF = data;
  1887  0208  0020               	movlb	0	; select bank0
  1888  0209  0830               	movf	I2cWriteMaster@data,w
  1889  020A  0024               	movlb	4	; select bank4
  1890  020B  0091               	movwf	17	;volatile
  1891                           
  1892                           ;i2c.c: 125: I2cWait();
  1893  020C  3182  223A         	fcall	_I2cWait
  1894                           
  1895                           ;i2c.c: 126: return !SSP1CON2bits.ACKSTAT;
  1896                           ;	Return value of _I2cWriteMaster is never used
  1897  020E  0024               	movlb	4	; select bank4
  1898  020F  0816               	movf	22,w	;volatile
  1899  0210  0008               	return
  1900  0211                     __end_of_I2cWriteMaster:	
  1901                           
  1902                           	psect	text8
  1903  022A                     __ptext8:	
  1904 ;; *************** function _I2cStart *****************
  1905 ;; Defined at:
  1906 ;;		line 64 in file "i2c.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;		None               void
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1920 ;;      Params:         0       0       0       0
  1921 ;;      Locals:         0       0       0       0
  1922 ;;      Temps:          0       0       0       0
  1923 ;;      Totals:         0       0       0       0
  1924 ;;Total ram usage:        0 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    2
  1927 ;; This function calls:
  1928 ;;		_I2cWait
  1929 ;;		_I2cWaitForIdle
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _I2cStart
  1937  022A                     _I2cStart:	
  1938                           
  1939                           ;i2c.c: 65: I2cWaitForIdle();
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _I2cStart: [wreg+status,2+status,0+pclath+cstack]
  1943  022A  3182  2211  3182   	fcall	_I2cWaitForIdle
  1944                           
  1945                           ;i2c.c: 66: PIR1bits.SSP1IF = 0;
  1946  022D  0020               	movlb	0	; select bank0
  1947  022E  1191               	bcf	17,3	;volatile
  1948                           
  1949                           ;i2c.c: 67: SSP1CON2bits.SEN = 1;
  1950  022F  0024               	movlb	4	; select bank4
  1951  0230  1416               	bsf	22,0	;volatile
  1952                           
  1953                           ;i2c.c: 68: I2cWait();
  1954  0231  3182  223A         	fcall	_I2cWait
  1955  0233  0008               	return
  1956  0234                     __end_of_I2cStart:	
  1957                           
  1958                           	psect	text9
  1959  0211                     __ptext9:	
  1960 ;; *************** function _I2cWaitForIdle *****************
  1961 ;; Defined at:
  1962 ;;		line 53 in file "i2c.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;		None               void
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1976 ;;      Params:         0       0       0       0
  1977 ;;      Locals:         0       0       0       0
  1978 ;;      Temps:          0       1       0       0
  1979 ;;      Totals:         0       1       0       0
  1980 ;;Total ram usage:        1 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    1
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_I2cStart
  1987 ;;		_I2cStop
  1988 ;;		_I2cWriteMaster
  1989 ;;		_I2cRepStart
  1990 ;;		_I2cReadMaster
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _I2cWaitForIdle
  1996  0211                     _I2cWaitForIdle:	
  1997  0211                     l1233:	
  1998                           ;i2c.c: 55: {
  1999                           ;i2c.c: 56: continue;
  2000                           
  2001                           ;i2c.c: 54: while ((SSP1CON2 & 0x1F) | SSP1STATbits.R_nW)
  2002                           
  2003                           ;incstack = 0
  2004                           ; Regs used in _I2cWaitForIdle: [wreg+status,2+status,0]
  2005                           
  2006  0211  0024               	movlb	4	; select bank4
  2007  0212  0C14               	rrf	20,w	;volatile
  2008  0213  0C89               	rrf	9,f
  2009  0214  3901               	andlw	1
  2010  0215  0020               	movlb	0	; select bank0
  2011  0216  00AF               	movwf	??_I2cWaitForIdle
  2012  0217  0024               	movlb	4	; select bank4
  2013  0218  0816               	movf	22,w	;volatile
  2014  0219  391F               	andlw	31
  2015  021A  0020               	movlb	0	; select bank0
  2016  021B  042F               	iorwf	??_I2cWaitForIdle,w
  2017  021C  1903               	btfsc	3,2
  2018  021D  0008               	return
  2019  021E  2A11               	goto	l1233
  2020  021F                     __end_of_I2cWaitForIdle:	
  2021                           
  2022                           	psect	text10
  2023  023A                     __ptext10:	
  2024 ;; *************** function _I2cWait *****************
  2025 ;; Defined at:
  2026 ;;		line 41 in file "i2c.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;		None               void
  2033 ;; Registers used:
  2034 ;;		None
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2040 ;;      Params:         0       0       0       0
  2041 ;;      Locals:         0       0       0       0
  2042 ;;      Temps:          0       0       0       0
  2043 ;;      Totals:         0       0       0       0
  2044 ;;Total ram usage:        0 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_I2cStart
  2051 ;;		_I2cStop
  2052 ;;		_I2cWriteMaster
  2053 ;;		_I2cRepStart
  2054 ;;		_I2cWriteSlave
  2055 ;;		_I2cReadSlave
  2056 ;;		_I2cReadMaster
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function _I2cWait
  2062  023A                     _I2cWait:	
  2063  023A                     l208:	
  2064                           ;i2c.c: 43: {
  2065                           ;i2c.c: 44: continue;
  2066                           
  2067                           ;i2c.c: 42: while (!PIR1bits.SSP1IF)
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _I2cWait: []
  2071                           
  2072  023A  0020               	movlb	0	; select bank0
  2073  023B  1D91               	btfss	17,3	;volatile
  2074  023C  2A3A               	goto	l208
  2075                           
  2076                           ;i2c.c: 45: }
  2077                           ;i2c.c: 46: PIR1bits.SSP1IF=0;
  2078  023D  1191               	bcf	17,3	;volatile
  2079  023E  0008               	return
  2080  023F                     __end_of_I2cWait:	
  2081                           
  2082                           	psect	text11
  2083  01F4                     __ptext11:	
  2084 ;; *************** function _I2cInitMaster *****************
  2085 ;; Defined at:
  2086 ;;		line 8 in file "i2c.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;		None               void
  2093 ;; Registers used:
  2094 ;;		wreg, status,2
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2100 ;;      Params:         0       0       0       0
  2101 ;;      Locals:         0       0       0       0
  2102 ;;      Temps:          0       0       0       0
  2103 ;;      Totals:         0       0       0       0
  2104 ;;Total ram usage:        0 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    1
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           
  2115                           ;psect for function _I2cInitMaster
  2116  01F4                     _I2cInitMaster:	
  2117                           
  2118                           ;i2c.c: 9: RC0 = 1;
  2119                           
  2120                           ;incstack = 0
  2121                           ; Regs used in _I2cInitMaster: [wreg+status,2]
  2122  01F4  0020               	movlb	0	; select bank0
  2123  01F5  140E               	bsf	14,0	;volatile
  2124                           
  2125                           ;i2c.c: 10: RC1 = 1;
  2126  01F6  148E               	bsf	14,1	;volatile
  2127                           
  2128                           ;i2c.c: 11: SSP1CON1 = 0b00101000;
  2129  01F7  3028               	movlw	40
  2130  01F8  0024               	movlb	4	; select bank4
  2131  01F9  0095               	movwf	21	;volatile
  2132                           
  2133                           ;i2c.c: 12: SSP1CON2 = 0;
  2134  01FA  0196               	clrf	22	;volatile
  2135                           
  2136                           ;i2c.c: 13: SSP1STATbits.CKE = 0;
  2137  01FB  1314               	bcf	20,6	;volatile
  2138                           
  2139                           ;i2c.c: 14: SSP1ADD = (char)((40000000UL/(4000UL*400))-2);
  2140  01FC  3017               	movlw	23
  2141  01FD  0092               	movwf	18	;volatile
  2142                           
  2143                           ;i2c.c: 15: SSP1STATbits.SMP = 0;
  2144  01FE  1394               	bcf	20,7	;volatile
  2145                           
  2146                           ;i2c.c: 16: PIR1bits.SSP1IF = 0;
  2147  01FF  0020               	movlb	0	; select bank0
  2148  0200  1191               	bcf	17,3	;volatile
  2149                           
  2150                           ;i2c.c: 17: PIR2bits.BCL1IF = 0;
  2151  0201  1192               	bcf	18,3	;volatile
  2152  0202  0008               	return
  2153  0203                     __end_of_I2cInitMaster:	
  2154                           
  2155                           	psect	text12
  2156  017E                     __ptext12:	
  2157 ;; *************** function _InitApp *****************
  2158 ;; Defined at:
  2159 ;;		line 12 in file "user.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;		None               void
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2173 ;;      Params:         0       0       0       0
  2174 ;;      Locals:         0       0       0       0
  2175 ;;      Temps:          0       0       0       0
  2176 ;;      Totals:         0       0       0       0
  2177 ;;Total ram usage:        0 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    1
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _InitApp
  2189  017E                     _InitApp:	
  2190                           
  2191                           ;user.c: 24: TRISA = 0b00000001;
  2192                           
  2193                           ;incstack = 0
  2194                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  2195  017E  3001               	movlw	1
  2196  017F  0021               	movlb	1	; select bank1
  2197  0180  008C               	movwf	12	;volatile
  2198                           
  2199                           ;user.c: 25: TRISC = 0b00001111;
  2200  0181  300F               	movlw	15
  2201  0182  008E               	movwf	14	;volatile
  2202                           
  2203                           ;user.c: 27: ANSELA = 0b00000000;
  2204  0183  0023               	movlb	3	; select bank3
  2205  0184  018C               	clrf	12	;volatile
  2206                           
  2207                           ;user.c: 28: ANSELC = 0b00001100;
  2208  0185  300C               	movlw	12
  2209  0186  008E               	movwf	14	;volatile
  2210                           
  2211                           ;user.c: 31: PORTA = 0b00010100;
  2212  0187  3014               	movlw	20
  2213  0188  0020               	movlb	0	; select bank0
  2214  0189  008C               	movwf	12	;volatile
  2215                           
  2216                           ;user.c: 32: PORTC = 0b00110000;
  2217  018A  3030               	movlw	48
  2218  018B  008E               	movwf	14	;volatile
  2219                           
  2220                           ;user.c: 33: LATA = 0b00010100;
  2221  018C  3014               	movlw	20
  2222  018D  0022               	movlb	2	; select bank2
  2223  018E  008C               	movwf	12	;volatile
  2224                           
  2225                           ;user.c: 34: LATC = 0b00110000;
  2226  018F  3030               	movlw	48
  2227  0190  008E               	movwf	14	;volatile
  2228                           
  2229                           ;user.c: 39: T1CON=0b01000001;
  2230  0191  3041               	movlw	65
  2231  0192  0020               	movlb	0	; select bank0
  2232  0193  0098               	movwf	24	;volatile
  2233                           
  2234                           ;user.c: 46: PIE1bits.TMR1IE = 1;
  2235  0194  0021               	movlb	1	; select bank1
  2236  0195  1411               	bsf	17,0	;volatile
  2237                           
  2238                           ;user.c: 48: ADCON0=0x00;
  2239  0196  019D               	clrf	29	;volatile
  2240                           
  2241                           ;user.c: 53: ADCON0bits.ADON = 1;
  2242  0197  141D               	bsf	29,0	;volatile
  2243                           
  2244                           ;user.c: 56: ADCON1=0x00;
  2245  0198  019E               	clrf	30	;volatile
  2246                           
  2247                           ;user.c: 62: ADCON1bits.ADCS=0b110;
  2248  0199  081E               	movf	30,w	;volatile
  2249  019A  398F               	andlw	-113
  2250  019B  3860               	iorlw	96
  2251  019C  009E               	movwf	30	;volatile
  2252                           
  2253                           ;user.c: 69: INTCONbits.GIE = 1;
  2254  019D  178B               	bsf	11,7	;volatile
  2255                           
  2256                           ;user.c: 70: INTCONbits.PEIE = 1;
  2257  019E  170B               	bsf	11,6	;volatile
  2258                           
  2259                           ;user.c: 71: PIE1bits.ADIE = 1;
  2260  019F  1711               	bsf	17,6	;volatile
  2261  01A0  0008               	return
  2262  01A1                     __end_of_InitApp:	
  2263                           
  2264                           	psect	text13
  2265  023F                     __ptext13:	
  2266 ;; *************** function _ConfigureOscillator *****************
  2267 ;; Defined at:
  2268 ;;		line 8 in file "system.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;		None               void
  2275 ;; Registers used:
  2276 ;;		status,2
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2282 ;;      Params:         0       0       0       0
  2283 ;;      Locals:         0       0       0       0
  2284 ;;      Temps:          0       0       0       0
  2285 ;;      Totals:         0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _ConfigureOscillator
  2298  023F                     _ConfigureOscillator:	
  2299                           
  2300                           ;system.c: 11: OSCCON=0b00000000;
  2301                           
  2302                           ;incstack = 0
  2303                           ; Regs used in _ConfigureOscillator: [status,2]
  2304  023F  0021               	movlb	1	; select bank1
  2305  0240  0199               	clrf	25	;volatile
  2306  0241  0008               	return
  2307  0242                     __end_of_ConfigureOscillator:	
  2308                           
  2309                           	psect	intentry
  2310  0004                     __pintentry:	
  2311 ;; *************** function _isr *****************
  2312 ;; Defined at:
  2313 ;;		line 13 in file "interrupts.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;		None               void
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2327 ;;      Params:         0       0       0       0
  2328 ;;      Locals:         0       0       0       0
  2329 ;;      Temps:          8       0       0       0
  2330 ;;      Totals:         8       0       0       0
  2331 ;;Total ram usage:        8 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		Interrupt level 1
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340  0004                     _isr:	
  2341                           
  2342                           ;incstack = 0
  2343                           ; Regs used in _isr: [wreg+status,2+status,0]
  2344  0004  3180               	pagesel	$
  2345  0005  0020               	movlb	0	; select bank0
  2346  0006  087F               	movf	127,w
  2347  0007  00F7               	movwf	??_isr+7
  2348                           
  2349                           ;interrupts.c: 14: if(PIR1bits.TMR1IF){
  2350  0008  1C11               	btfss	17,0	;volatile
  2351  0009  2811               	goto	i1l995
  2352                           
  2353                           ;interrupts.c: 15: timer_100us=1;
  2354  000A  01BE               	clrf	_timer_100us
  2355  000B  0ABE               	incf	_timer_100us,f
  2356                           
  2357                           ;interrupts.c: 18: TMR1H=0xF0;
  2358  000C  30F0               	movlw	240
  2359  000D  0097               	movwf	23	;volatile
  2360                           
  2361                           ;interrupts.c: 19: TMR1L=0xA2;
  2362  000E  30A2               	movlw	162
  2363  000F  0096               	movwf	22	;volatile
  2364                           
  2365                           ;interrupts.c: 20: PIR1bits.TMR1IF = 0;
  2366  0010  1011               	bcf	17,0	;volatile
  2367  0011                     i1l995:	
  2368                           
  2369                           ;interrupts.c: 22: }
  2370                           ;interrupts.c: 24: if(PIR1bits.ADIF){
  2371  0011  1F11               	btfss	17,6	;volatile
  2372  0012  2830               	goto	i1l19
  2373                           
  2374                           ;interrupts.c: 25: adc_buffer = (ADRESH<<2) + (ADRESL>>6);
  2375  0013  0021               	movlb	1	; select bank1
  2376  0014  081B               	movf	27,w	;volatile
  2377  0015  00F0               	movwf	??_isr
  2378  0016  3006               	movlw	6
  2379  0017                     u38_25:	
  2380  0017  36F0               	lsrf	??_isr,f
  2381  0018  0B89               	decfsz	9,f
  2382  0019  2817               	goto	u38_25
  2383  001A  0870               	movf	??_isr,w
  2384  001B  00F1               	movwf	??_isr+1
  2385  001C  01F2               	clrf	??_isr+2
  2386  001D  081C               	movf	28,w	;volatile
  2387  001E  00F3               	movwf	??_isr+3
  2388  001F  01F4               	clrf	??_isr+4
  2389  0020  35F3               	lslf	??_isr+3,f
  2390  0021  0DF4               	rlf	??_isr+4,f
  2391  0022  35F3               	lslf	??_isr+3,f
  2392  0023  0DF4               	rlf	??_isr+4,f
  2393  0024  0871               	movf	??_isr+1,w
  2394  0025  0773               	addwf	??_isr+3,w
  2395  0026  00F5               	movwf	??_isr+5
  2396  0027  0872               	movf	??_isr+2,w
  2397  0028  3D74               	addwfc	??_isr+4,w
  2398  0029  00F6               	movwf	??_isr+6
  2399  002A  0875               	movf	??_isr+5,w
  2400  002B  0020               	movlb	0	; select bank0
  2401  002C  00BA               	movwf	_adc_buffer
  2402  002D  0876               	movf	??_isr+6,w
  2403  002E  00BB               	movwf	_adc_buffer+1
  2404                           
  2405                           ;interrupts.c: 26: PIR1bits.ADIF = 0;
  2406  002F  1311               	bcf	17,6	;volatile
  2407  0030                     i1l19:	
  2408  0030  0877               	movf	??_isr+7,w
  2409  0031  00FF               	movwf	127
  2410  0032  0009               	retfie
  2411  0033                     __end_of_isr:	
  2412  007E                     btemp	set	126	;btemp
  2413  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     11      36
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ?_blink	void  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_displayCharge
    _displayCharge->_lightupLed
    _I2cStop->_I2cWaitForIdle
    _I2cWriteMaster->_I2cWaitForIdle
    _I2cStart->_I2cWaitForIdle

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     361
                                              9 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                      _I2cInitMaster
                           _I2cStart
                     _I2cWriteMaster
                            _I2cStop
                              _blink
                           _read_adc
                      _displayCharge
                         _readButton
 ---------------------------------------------------------------------------------
 (1) _readButton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayCharge                                        1     1      0     295
                                              8 BANK0      1     1      0
                         _lightupLed
 ---------------------------------------------------------------------------------
 (2) _lightupLed                                           8     8      0     295
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                3     1      2       0
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _I2cStop                                              0     0      0       0
                            _I2cWait
                     _I2cWaitForIdle
 ---------------------------------------------------------------------------------
 (1) _I2cWriteMaster                                       1     1      0      22
                                              1 BANK0      1     1      0
                            _I2cWait
                     _I2cWaitForIdle
 ---------------------------------------------------------------------------------
 (1) _I2cStart                                             0     0      0       0
                            _I2cWait
                     _I2cWaitForIdle
 ---------------------------------------------------------------------------------
 (2) _I2cWaitForIdle                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2cWait                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2cInitMaster                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _I2cInitMaster
   _I2cStart
     _I2cWait
     _I2cWaitForIdle
   _I2cWriteMaster
     _I2cWait
     _I2cWaitForIdle
   _I2cStop
     _I2cWait
     _I2cWaitForIdle
   _blink
   _read_adc
   _displayCharge
     _lightupLed
   _readButton

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       2       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      B      24       6       45.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      2E      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Oct 11 17:07:22 2013

                 __CFG_CP$OFF 0000                           l122 00B9                           l208 023A  
                         _RA0 0060                           _RA2 0062                           _RC0 0070  
                         _RA4 0064                           _RC1 0071                           _RC2 0072  
                         _RC3 0073                           _RC4 0074                           _RC5 0075  
                         u415 00E8                           u505 0054                  __CFG_CPD$OFF 0000  
                         u515 006A                           u525 007B                           u535 008C  
                         u625 015C                           u545 009D                           u555 00AE  
                         u565 012E                           u655 016F                           u495 0040  
                         u595 0149                           _VTH 0020                           _isr 0004  
              ?_displayCharge 0070                  __CFG_BORV$LO 0000                           wreg 0009  
             __end_of_I2cWait 023F               __end_of_I2cStop 022A                  __CFG_LVP$OFF 0000  
                        l1013 00D2                          l1007 00C9                          l1033 00FC  
                        l1051 0123                          l1027 00F2                          l1045 0118  
                        l1143 01AE                          l1207 0152                          l1233 0211  
                        l1217 0165                          l1161 005F                          l1147 01BA  
                        l1227 0178                          l1155 0049                          l1173 0092  
                        l1165 0070                          l1177 00A3                          l1169 0081  
                        l1197 013F                          ?_isr 0070                          _LATA 010C  
                        _LATC 010E                          i1l19 0030                  __CFG_WRT$OFF 0000  
                        _cont 003C                          _main 00C0                          fsr0h 0005  
                        fsr1h 0007                          fsr0l 0004                          fsr1l 0006  
                        btemp 007E                          start 0033                 __CFG_IESO$OFF 0000  
            ??_I2cWriteMaster 0030                 __CFG_FOSC$ECH 0000                 __CFG_MCLRE$ON 0000  
           lightupLed@lightup 0036               __end_of_InitApp 01A1              __end_of_I2cStart 0234  
                       ??_isr 0070                 __CFG_PLLEN$ON 0000                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _T1CON 0018                         i1l995 0011  
                       _TMR1H 0017                         _TMR1L 0016                         _PORTA 000C  
                       _PORTC 000E                         u38_25 0017                         _TRISA 008C  
                       _TRISC 008E           _ConfigureOscillator 023F                __CFG_FCMEN$OFF 0000  
                       _blink 01D5                __CFG_BOREN$OFF 0000                         status 0003  
                       wtemp0 007E          ?_ConfigureOscillator 0070               __initialization 01BD  
                __end_of_main 0129                        ??_main 0038               ??_displayCharge 0037  
                   ??_I2cWait 002F                     ??_I2cStop 0030                        ?_blink 002F  
                      _ADCON0 009D                        _ADCON1 009E                        _ADRESH 009C  
                      _ADRESL 009B                        _ANSELA 018C                        _ANSELC 018E  
                      _OSCCON 0099                     ??_InitApp 002F         ??_ConfigureOscillator 002F  
              __CFG_PWRTE$OFF 0000              __end_of_read_adc 01BD                        _toggle 0043  
       __end_of_I2cInitMaster 0203                     ?_I2cStart 0070       __end_of__initialization 01D2  
              __pcstackCOMMON 0070                  __pidataBANK0 01E5                    _adc_buffer 003A  
               __end_of_blink 01E5                       ??_blink 0031                    __pbssBANK0 003A  
                  ??_I2cStart 0030       __size_of_I2cWaitForIdle 000E                    __pmaintext 00C0  
                  __pintentry 0004                       _I2cWait 023A                       _I2cStop 021F  
                     _SSP1ADD 0212                       _SSP1BUF 0211                     ?_read_adc 0070  
                     _InitApp 017E                    _readButton 0242                    _lightupLed 0129  
             __CFG_STVREN$OFF 0000                       __ptext1 0242                       __ptext2 0035  
                     __ptext3 0129                       __ptext4 01A1                       __ptext5 01D5  
                     __ptext6 021F                       __ptext7 0203                       __ptext8 022A  
                     __ptext9 0211                  __size_of_isr 002F          end_of_initialization 01D2  
                     init_ram 0234                    ??_read_adc 002F                       initloop 0235  
                  _timer_10ms 003F       __size_of_I2cWriteMaster 000E            I2cWriteMaster@data 0030  
       __end_of_displayCharge 00C0   __end_of_ConfigureOscillator 0242               lightupLed@blink 0035  
           __size_of_I2cStart 000A                _I2cWaitForIdle 0211                   ?_readButton 0070  
                 ?_lightupLed 0070           start_initialization 01BD                   __end_of_isr 0033  
      __end_of_I2cWaitForIdle 021F                _lightupLed$190 0033                _lightupLed$191 0034  
              _lightupLed$188 0031                _lightupLed$189 0032        __size_of_I2cInitMaster 000F  
                 __pdataBANK0 0020                      ?_I2cWait 0070                      ?_I2cStop 0070  
               __pcstackBANK0 002F           __size_of_readButton 0001               ?_I2cWaitForIdle 0070  
         __size_of_lightupLed 0055                      ?_InitApp 0070             __size_of_read_adc 001C  
              _I2cWriteMaster 0203                 _I2cInitMaster 01F4                __size_of_blink 0010  
                    _I2cStart 022A                      _PIE1bits 0091                      _PIR1bits 0011  
                    _PIR2bits 0012                     _timer_1ms 0040                      _SSP1CON1 0215  
                    _SSP1CON2 0216        __end_of_I2cWriteMaster 0211                    _ADCON0bits 009D  
                  _ADCON1bits 009E              __size_of_I2cWait 0005              __size_of_I2cStop 000B  
              ?_I2cInitMaster 0070              __size_of_InitApp 0023                  ??_readButton 002F  
             ?_I2cWriteMaster 0070                  ??_lightupLed 002F                      _blink_ds 002E  
                    __ptext10 023A                      __ptext11 01F4                      __ptext12 017E  
                    __ptext13 023F                  _SSP1CON1bits 0215                  _SSP1CON2bits 0216  
          __end_of_readButton 0243                      _read_adc 01A1                 __size_of_main 0069  
          __end_of_lightupLed 017E  __size_of_ConfigureOscillator 0003        __size_of_displayCharge 008B  
                    _timer_1s 0041                 read_adc@input 002F                  _SSP1STATbits 0214  
             ??_I2cInitMaster 002F                    _INTCONbits 000B              ??_I2cWaitForIdle 002F  
                    intlevel1 0000             __CFG_CLKOUTEN$OFF 0000                   _timer_100ms 003D  
                 _timer_100us 003E                 _displayCharge 0035                   _timer_blink 0042  
